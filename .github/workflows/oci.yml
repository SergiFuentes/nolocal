name: OCI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  OCI:
    runs-on: ubuntu-latest
    steps:
      - name: Install Oracle Cloud Infrastructure CLI
        uses: bytesbay/oci-cli-action@v1.0.2
        with:
          user: ${{secrets.OCI_USER_OCID}}
          fingerprint: ${{secrets.OCI_FINGERPRINT}}
          tenancy: ${{secrets.OCI_TENANCY}}
          region: ${{secrets.OCI_REGION}}
          api_key: ${{secrets.OCI_KEY_FILE}}
      - name: Set up ssh keys
        run: |
          echo "${{secrets.VM_SSH_PUB_KEY}}" >> /home/runner/.oci/id_vm.pub
      - name: Check existing instance
        run: |
          echo "INSTANCE_OCID=$( \
              oci compute instance list \
              --lifecycle-state RUNNING \
              --compartment-id ${{secrets.VM_COMPARTMENT_OCID}} \
              --display-name nolocal \
              --query "data [0].id" \
              --raw-output \
          )" >> $GITHUB_ENV
      - name: Create Instance
        if: ${{!env.INSTANCE_OCID}}
        run: |
          echo "INSTANCE_OCID=$( \
            oci compute instance launch \
              --compartment-id ${{secrets.VM_COMPARTMENT_OCID}} \
              --availability-domain ${{secrets.VM_AVAILABILITY_DOMAIN}} \
              --shape ${{secrets.VM_SHAPE}} \
              --assign-public-ip true \
              --display-name nolocal \
              --image-id ${{secrets.VM_CUSTOM_IMAGE_OCID}} \
              --ssh-authorized-keys-file /home/runner/.oci/id_vm.pub \
              --subnet-id ${{secrets.VM_SUBNET_OCID}} \
              --wait-for-state RUNNING \
              --query "data.id" \
              --raw-output \
          )" >> $GITHUB_ENV
      - name: Get Instance IP
        run: |
          echo "INSTANCE_IP=$( \
            oci compute instance list-vnics \
            --instance-id ${{env.INSTANCE_OCID}} \
            --query 'data [0]."public-ip"' \
            --raw-output \
          )" >> $GITHUB_ENV
      - name: SSH wait
        run: |
          while ! nc -w5 -z ${{ env.INSTANCE_IP }} 22; do
                  sleep 5
                  echo "SSH not available, retrying..."
          done; echo "SSH ready!"
      #no blue green deployment... we are here for the KILL 
      - name: Stop App
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.INSTANCE_IP }}
          username: ubuntu
          key: ${{secrets.VM_SSH_PRIVATE_KEY}}
          script: |
            pid=`ps aux | grep "nolocal.jar" | awk '{print $2}'`
            if [ "$pid" == "" ]; then
              echo "Process not found"
            else
              kill -9 $pid
            fi
            sudo mkdir -p /app
          
